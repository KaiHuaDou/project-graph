import { glob, writeFile } from "node:fs/promises";
import { Plugin } from "vite";
import { convertThemeToCss, generateUtilities, parseThemeFiles } from "./theme";

interface Config {
  /** 主题文件glob */
  glob: string | string[];
  /** 输出文件路径 */
  out: string;
  /** 默认主题id */
  defaultTheme: string;
}

export default function pgTheme(pluginConfig: Config): Plugin {
  return {
    name: "pg-theme",
    async configResolved() {
      await generateAndWrite(pluginConfig);
    },
    async handleHotUpdate(ctx) {
      for await (const file of glob(pluginConfig.glob)) {
        if (file === ctx.file) {
          await generateAndWrite(pluginConfig);
          break;
        }
      }
    },
  };
}

async function generateAndWrite(pluginConfig: Config) {
  console.log("[vite-plugin-pg-theme] 重新生成主题文件");
  const themes = await parseThemeFiles(pluginConfig.glob);
  const defaultTheme = themes.find((theme) => theme.metadata.id === pluginConfig.defaultTheme);
  if (!defaultTheme) return;
  // 生成tailwindcss主题
  const cssVariables = convertThemeToCss(defaultTheme.content);
  const tailwindUtilities = generateUtilities(defaultTheme.content);
  const tailwindTheme = `\
@theme inline {
  ${cssVariables}
}
${tailwindUtilities}
`
    // .replaceAll("\n", "")
    // .replaceAll(" ", "")
    .trim();
  const withComments = `\
/* eslint-disable */
/* prettier-ignore */
/* Generated by vite-plugin-pg-theme */
${tailwindTheme}
`;
  // 写入文件
  await writeFile(pluginConfig.out, withComments, "utf-8");
  console.log("[vite-plugin-pg-theme] 主题文件生成完成");
}
